ggplot(data = plotData, aes(x=Mouse_Line, y = plotData[,yIdx], group = Mouse_Line, fill = Mouse_Line))+
geom_boxplot(outlier.color="black", outlier.stroke=1, outlier.shape=5, position=position_dodge(1))+
scale_fill_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'))+
scale_y_continuous(limits = limY)+
xlab('Line') + ylab(yname) + theme(text=element_text(size = 15))+
theme(axis.title.y=element_text(margin = margin(t=0, r=10, b=0, l=0))) +
theme(axis.title.x=element_text(margin = margin(t=5, r=0, b=0, l=0)))+
theme(legend.direction = 'vertical', legend.justification='center')+
geom_point(size=3, alpha=0.4)+ggtitle(plotTitle)+
scale_color_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'), guide=FALSE)+
facet_wrap(~PrefGroup)
plotData = raw_cleaned[raw_cleaned$PrefGroup == 1,]
plotTitle='Sucrose Preference'
yname='Relative Water Intake [ml/g BW/d]'
saveVarName = c('per_AV')
yIdx = which(variable.names(plotData) == saveVarName)
limY=c(0,100)
plt = ggplot(data = plotData, aes(x=Mouse_Line, y = plotData[,yIdx], group = Mouse_Line, fill = Mouse_Line))+
geom_boxplot(outlier.color="black", outlier.stroke=1, outlier.shape=5, position=position_dodge(1))+
scale_fill_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'))+
scale_y_continuous(limits = limY)+
xlab('Line') + ylab(yname) + theme(text=element_text(size = 15))+
theme(axis.title.y=element_text(margin = margin(t=0, r=10, b=0, l=0))) +
theme(axis.title.x=element_text(margin = margin(t=5, r=0, b=0, l=0)))+
theme(legend.direction = 'vertical', legend.justification='center')+
geom_point(size=3, alpha=0.4)+ggtitle(plotTitle)+
scale_color_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'), guide=FALSE)+
geom_hline(yintercept=65, linetype=4)
plt
Subgroup_hedonic = raw_data[raw_data$PrefGroup == 1,]
Subgroup_anhedonic = raw_data[raw_data$PrefGroup == 0,]
library(rJava)
library(xlsx)
library(car)
##### Stat Tests
# library(Rmisc)
setwd('C:/Users/lena_/Dropbox/studies/Osnabrück/Universität/Bachelorarbeit_DroBo/experiments/Analysis Code/Behaviours')
#for SPT
statData = Subgroup_hedonic[,c(1,2,5,8,11,12,13,14,15)]
colnames(statData)[1]= 'Line'
# statData=statData[statData$Mouse_Subline==1,]
# statData=statData[statData$Mouse_Subline==2,]
statData$Line[statData$Line == 1] ='HR'
statData$Line[statData$Line == 2] ='IR'
statData$Line[statData$Line == 3] ='LR'
for (idx in 3:ncol(statData)){
statData[,idx] = as.factor(statData[,idx])
varNames = variable.names(statData)
print(varNames[idx])
print(kruskal.test(data=statData, statData[,idx] ~ as.factor(statData$Line)))
}
statData = Subgroup_anhedonic[,c(1,2,5,8,11,12,13,14,15)]
statData = raw_cleaned
colnames(statData)[1]= 'Line'
# statData=statData[statData$Mouse_Subline==1,]
# statData=statData[statData$Mouse_Subline==2,]
statData$Line[statData$Line == 1] ='HR'
statData$Line[statData$Line == 2] ='IR'
statData$Line[statData$Line == 3] ='LR'
for (idx in 3:ncol(statData)){
statData[,idx] = as.factor(statData[,idx])
varNames = variable.names(statData)
print(varNames[idx])
print(kruskal.test(data=statData, statData[,idx] ~ as.factor(statData$Line)))
}
plotData = raw_cleaned[raw_cleaned$PrefGroup == 0,]
plotTitle='Sucrose Preference'
yname='Relative Water Intake [ml/g BW/d]'
saveVarName = c('per_AV')
yIdx = which(variable.names(plotData) == saveVarName)
limY=c(0,100)
plt = ggplot(data = plotData, aes(x=Mouse_Line, y = plotData[,yIdx], group = Mouse_Line, fill = Mouse_Line))+
geom_boxplot(outlier.color="black", outlier.stroke=1, outlier.shape=5, position=position_dodge(1))+
scale_fill_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'))+
scale_y_continuous(limits = limY)+
xlab('Line') + ylab(yname) + theme(text=element_text(size = 15))+
theme(axis.title.y=element_text(margin = margin(t=0, r=10, b=0, l=0))) +
theme(axis.title.x=element_text(margin = margin(t=5, r=0, b=0, l=0)))+
theme(legend.direction = 'vertical', legend.justification='center')+
geom_point(size=3, alpha=0.4)+ggtitle(plotTitle)+
scale_color_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'), guide=FALSE)+
geom_hline(yintercept=65, linetype=4)
plt
raw_cleaned = raw_data
statData = raw_cleaned
colnames(statData)[1]= 'Line'
# statData=statData[statData$Mouse_Subline==1,]
# statData=statData[statData$Mouse_Subline==2,]
statData$Line[statData$Line == 1] ='HR'
statData$Line[statData$Line == 2] ='IR'
statData$Line[statData$Line == 3] ='LR'
statData = Subgroup_hedonic
colnames(statData)[1]= 'Line'
# statData=statData[statData$Mouse_Subline==1,]
# statData=statData[statData$Mouse_Subline==2,]
statData$Line[statData$Line == 1] ='HR'
statData$Line[statData$Line == 2] ='IR'
statData$Line[statData$Line == 3] ='LR'
for(iGr in unique(statData$Line)){
tmpData = statData[statData$Line == iGr,]
print(iGr)
print(t.test(tmpData$per_AV, mu =65))
}
plotData = raw_cleaned[raw_cleaned$PrefGroup == 0,]
plotTitle='Sucrose Preference: Anhedonic Subgroup'
yname='Average Sucrose Preference [%]'
saveVarName = c('per_AV')
yIdx = which(variable.names(plotData) == saveVarName)
limY=c(0,100)
plt = ggplot(data = plotData, aes(x=Mouse_Line, y = plotData[,yIdx], group = Mouse_Line, fill = Mouse_Line))+
geom_boxplot(outlier.color="black", outlier.stroke=1, outlier.shape=5, position=position_dodge(1))+
scale_fill_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'))+
scale_y_continuous(limits = limY)+
xlab('Line') + ylab(yname) + theme(text=element_text(size = 15))+
theme(axis.title.y=element_text(margin = margin(t=0, r=10, b=0, l=0))) +
theme(axis.title.x=element_text(margin = margin(t=5, r=0, b=0, l=0)))+
theme(legend.direction = 'vertical', legend.justification='center')+
geom_point(size=3, alpha=0.4)+ggtitle(plotTitle)+
scale_color_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'), guide=FALSE)+
geom_hline(yintercept=65, linetype=4)
ggsave(paste(savepath,paste(saveVarName, 'Anhedonic.png', sep='_'),sep='/'),plt, units='cm', height=heightPlot, width=widthPlot)
raw_cleaned$Mouse_Line[raw_cleaned$Mouse_Line == 1] ='HR'
raw_cleaned$Mouse_Line[raw_cleaned$Mouse_Line == 2] ='IR'
raw_cleaned$Mouse_Line[raw_cleaned$Mouse_Line == 3] ='LR'
plotData = raw_cleaned[raw_cleaned$PrefGroup == 0,]
plotTitle='Sucrose Preference: Anhedonic Subgroup'
yname='Average Sucrose Preference [%]'
saveVarName = c('per_AV')
yIdx = which(variable.names(plotData) == saveVarName)
limY=c(0,100)
plt = ggplot(data = plotData, aes(x=Mouse_Line, y = plotData[,yIdx], group = Mouse_Line, fill = Mouse_Line))+
geom_boxplot(outlier.color="black", outlier.stroke=1, outlier.shape=5, position=position_dodge(1))+
scale_fill_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'))+
scale_y_continuous(limits = limY)+
xlab('Line') + ylab(yname) + theme(text=element_text(size = 15))+
theme(axis.title.y=element_text(margin = margin(t=0, r=10, b=0, l=0))) +
theme(axis.title.x=element_text(margin = margin(t=5, r=0, b=0, l=0)))+
theme(legend.direction = 'vertical', legend.justification='center')+
geom_point(size=3, alpha=0.4)+ggtitle(plotTitle)+
scale_color_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'), guide=FALSE)+
geom_hline(yintercept=65, linetype=4)
ggsave(paste(savepath,paste(saveVarName, 'Anhedonic.png', sep='_'),sep='/'),plt, units='cm', height=heightPlot, width=widthPlot)
plotData = raw_cleaned[raw_cleaned$PrefGroup == 1,]
plotTitle='Sucrose Preference: Hedonic Subgroup'
yname='Average Sucrose Preference [%]'
saveVarName = c('per_AV')
yIdx = which(variable.names(plotData) == saveVarName)
limY=c(0,100)
plt = ggplot(data = plotData, aes(x=Mouse_Line, y = plotData[,yIdx], group = Mouse_Line, fill = Mouse_Line))+
geom_boxplot(outlier.color="black", outlier.stroke=1, outlier.shape=5, position=position_dodge(1))+
scale_fill_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'))+
scale_y_continuous(limits = limY)+
xlab('Line') + ylab(yname) + theme(text=element_text(size = 15))+
theme(axis.title.y=element_text(margin = margin(t=0, r=10, b=0, l=0))) +
theme(axis.title.x=element_text(margin = margin(t=5, r=0, b=0, l=0)))+
theme(legend.direction = 'vertical', legend.justification='center')+
geom_point(size=3, alpha=0.4)+ggtitle(plotTitle)+
scale_color_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'), guide=FALSE)+
geom_hline(yintercept=65, linetype=4)
ggsave(paste(savepath,paste(saveVarName, 'Hedonic.png', sep='_'),sep='/'),plt, units='cm', height=heightPlot, width=widthPlot)
statData = Subgroup_anhedonic
colnames(statData)[1]= 'Line'
# statData=statData[statData$Mouse_Subline==1,]
# statData=statData[statData$Mouse_Subline==2,]
statData$Line[statData$Line == 1] ='HR'
statData$Line[statData$Line == 2] ='IR'
statData$Line[statData$Line == 3] ='LR'
for(iGr in unique(statData$Line)){
tmpData = statData[statData$Line == iGr,]
print(iGr)
print(t.test(tmpData$per_AV, mu =65))
}
View(raw_cleaned)
raw_cleaned$Mouse_Line[raw_cleaned$Mouse_Line == 1] ='HR'
raw_cleaned$Mouse_Line[raw_cleaned$Mouse_Line == 2] ='IR'
raw_cleaned$Mouse_Line[raw_cleaned$Mouse_Line == 3] ='LR'
plotData = raw_cleaned[raw_cleaned$Mouse_Subline == 1,]
plotTitle='Sucrose Preference: Subline A'
yname='Average Sucrose Preference [%]'
saveVarName = c('per_AV')
yIdx = which(variable.names(plotData) == saveVarName)
limY=c(0,100)
plt = ggplot(data = plotData, aes(x=Mouse_Line, y = plotData[,yIdx], group = Mouse_Line, fill = Mouse_Line))+
geom_boxplot(outlier.color="black", outlier.stroke=1, outlier.shape=5, position=position_dodge(1))+
scale_fill_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'))+
scale_y_continuous(limits = limY)+
xlab('Line') + ylab(yname) + theme(text=element_text(size = 15))+
theme(axis.title.y=element_text(margin = margin(t=0, r=10, b=0, l=0))) +
theme(axis.title.x=element_text(margin = margin(t=5, r=0, b=0, l=0)))+
theme(legend.direction = 'vertical', legend.justification='center')+
geom_point(size=3, alpha=0.4)+ggtitle(plotTitle)+
scale_color_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'), guide=FALSE)+
geom_hline(yintercept=65, linetype=4)
ggsave(paste(savepath,paste(saveVarName, 'SublineA.png', sep='_'),sep='/'),plt, units='cm', height=heightPlot, width=widthPlot)
savepath = 'C:/Users/lena_/Dropbox/studies/Osnabrück/Universität/Bachelorarbeit_DroBo/experiments/Behavioural tests/CohortsI-IV'
plt = ggplot(data = plotData, aes(x=Mouse_Line, y = plotData[,yIdx], group = Mouse_Line, fill = Mouse_Line))+
geom_boxplot(outlier.color="black", outlier.stroke=1, outlier.shape=5, position=position_dodge(1))+
scale_fill_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'))+
scale_y_continuous(limits = limY)+
xlab('Line') + ylab(yname) + theme(text=element_text(size = 15))+
theme(axis.title.y=element_text(margin = margin(t=0, r=10, b=0, l=0))) +
theme(axis.title.x=element_text(margin = margin(t=5, r=0, b=0, l=0)))+
theme(legend.direction = 'vertical', legend.justification='center')+
geom_point(size=3, alpha=0.4)+ggtitle(plotTitle)+
scale_color_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'), guide=FALSE)+
geom_hline(yintercept=65, linetype=4)
ggsave(paste(savepath,paste(saveVarName, 'SublineA.png', sep='_'),sep='/'),plt, units='cm', height=heightPlot, width=widthPlot)
saveVarName
savepath
plotData = raw_cleaned[raw_cleaned$Mouse_Subline == 2,]
plotTitle='Sucrose Preference: Subline B'
yname='Average Sucrose Preference [%]'
saveVarName = c('per_AV')
yIdx = which(variable.names(plotData) == saveVarName)
limY=c(0,100)
plt = ggplot(data = plotData, aes(x=Mouse_Line, y = plotData[,yIdx], group = Mouse_Line, fill = Mouse_Line))+
geom_boxplot(outlier.color="black", outlier.stroke=1, outlier.shape=5, position=position_dodge(1))+
scale_fill_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'))+
scale_y_continuous(limits = limY)+
xlab('Line') + ylab(yname) + theme(text=element_text(size = 15))+
theme(axis.title.y=element_text(margin = margin(t=0, r=10, b=0, l=0))) +
theme(axis.title.x=element_text(margin = margin(t=5, r=0, b=0, l=0)))+
theme(legend.direction = 'vertical', legend.justification='center')+
geom_point(size=3, alpha=0.4)+ggtitle(plotTitle)+
scale_color_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'), guide=FALSE)+
geom_hline(yintercept=65, linetype=4)
ggsave(paste(savepath,paste(saveVarName, 'SublineB.png', sep='_'),sep='/'),plt, units='cm', height=heightPlot, width=widthPlot)
plotData = raw_cleaned
plotTitle='Average Sucrose Preference'
yname='Average Sucrose Preference [%]'
saveVarName = c('per_AV')
yIdx = which(variable.names(plotData) == saveVarName)
limY=c(0,100)
plt = ggplot(data = plotData, aes(x=Mouse_Line, y = plotData[,yIdx], group = Mouse_Line, fill = Mouse_Line))+
geom_boxplot(outlier.color="black", outlier.stroke=1, outlier.shape=5, position=position_dodge(1))+
scale_fill_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'))+
scale_y_continuous(limits = limY)+
xlab('Line') + ylab(yname) + theme(text=element_text(size = 15))+
theme(axis.title.y=element_text(margin = margin(t=0, r=10, b=0, l=0))) +
theme(axis.title.x=element_text(margin = margin(t=5, r=0, b=0, l=0)))+
theme(legend.direction = 'vertical', legend.justification='center')+
geom_point(size=3, alpha=0.4)+ggtitle(plotTitle)+
scale_color_manual(values = cols, name='Line', labels=c('HR', 'IR','LR'), guide=FALSE)+
geom_hline(yintercept=65, linetype=4)
ggsave(paste(savepath,paste(saveVarName, 'png', sep='.'),sep='/'),plt, units='cm', height=heightPlot, width=widthPlot)
statData = raw_cleaned[raw_cleaned$Mouse_Subline==1,]
colnames(statData)[1]= 'Line'
# statData=statData[statData$Mouse_Subline==1,]
# statData=statData[statData$Mouse_Subline==2,]
statData$Line[statData$Line == 1] ='HR'
statData$Line[statData$Line == 2] ='IR'
statData$Line[statData$Line == 3] ='LR'
for (idx in 3:ncol(statData)){
statData[,idx] = as.factor(statData[,idx])
varNames = variable.names(statData)
print(varNames[idx])
print(kruskal.test(data=statData, statData[,idx] ~ as.factor(statData$Line)))
}
statData = raw_cleaned[raw_cleaned$Mouse_Subline==2,]
colnames(statData)[1]= 'Line'
# statData=statData[statData$Mouse_Subline==1,]
# statData=statData[statData$Mouse_Subline==2,]
statData$Line[statData$Line == 1] ='HR'
statData$Line[statData$Line == 2] ='IR'
statData$Line[statData$Line == 3] ='LR'
for (idx in 3:ncol(statData)){
statData[,idx] = as.factor(statData[,idx])
varNames = variable.names(statData)
print(varNames[idx])
print(kruskal.test(data=statData, statData[,idx] ~ as.factor(statData$Line)))
}
statData = Subgroup_anhedonic
statData2 = Subgroup_hedonic
colnames(statData)[1]= 'Line'
statData$Line[statData$Line == 1] ='HR'
statData$Line[statData$Line == 2] ='IR'
statData$Line[statData$Line == 3] ='LR'
colnames(statData2) = colnames(StatData)
for(iGr in unique(statData$Line)){
tmpData = statData[statData$Line == iGr,]
tmpData2 = statData2[statData2$Line == iGr,]
print(iGr)
print(t.test(tmpData$per_AV, tmpData2$per_AV))
# print(t.test(tmpData$per_AV, mu =65))
}
statData = Subgroup_anhedonic
statData2 = Subgroup_hedonic
colnames(statData)[1]= 'Line'
statData$Line[statData$Line == 1] ='HR'
statData$Line[statData$Line == 2] ='IR'
statData$Line[statData$Line == 3] ='LR'
colnames(statData2) = colnames(statData)
for(iGr in unique(statData$Line)){
tmpData = statData[statData$Line == iGr,]
tmpData2 = statData2[statData2$Line == iGr,]
print(iGr)
print(t.test(tmpData$per_AV, tmpData2$per_AV))
# print(t.test(tmpData$per_AV, mu =65))
}
iGr
tmpData
View(tmpData)
View(tmpData2)
statData2 = Subgroup_hedonic
View(statData2)
statData = Subgroup_anhedonic
statData2 = Subgroup_hedonic
colnames(statData)[1]= 'Line'
statData$Line[statData$Line == 1] ='HR'
statData$Line[statData$Line == 2] ='IR'
statData$Line[statData$Line == 3] ='LR'
colnames(statData2) = colnames(statData)
View(statData)
statData = Subgroup_anhedonic
statData2 = Subgroup_hedonic
colnames(statData)[1]= 'Line'
statData$Line[statData$Line == 1] ='HR'
statData$Line[statData$Line == 2] ='IR'
statData$Line[statData$Line == 3] ='LR'
colnames(statData2) = colnames(statData)
statData2$Line[statData2$Line == 1] ='HR'
statData2$Line[statData2$Line == 2] ='IR'
statData2$Line[statData2$Line == 3] ='LR'
for(iGr in unique(statData$Line)){
tmpData = statData[statData$Line == iGr,]
tmpData2 = statData2[statData2$Line == iGr,]
print(iGr)
print(t.test(tmpData$per_AV, tmpData2$per_AV))
# print(t.test(tmpData$per_AV, mu =65))
}
View(Subgroup_hedonic)
setwd('C:/Users/lena_/Dropbox/studies/Osnabrück/Universität/Bachelorarbeit_DroBo/experiments/Analysis Code/Behaviours')
filepath = 'C:/Users/lena_/Dropbox/studies/Osnabrück/Universität/Bachelorarbeit_DroBo/experiments/Behavioural tests'
fileX = 'SPT_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = na.omit(raw_data)
raw_data=raw_data[,1:ncol(raw_data)]
View(raw_data)
fileX = 'SPT_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = na.omit(raw_data)
raw_data=raw_data[,2:ncol(raw_data)]
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[,1:(ncol(raw_data)-2)]
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[,1:(ncol(raw_data)-2)]
raw_data = raw_data[!(is.na(raw_data$Mouse_ID)),]
raw_data = raw_data[,which(variable.names(raw_data) %in% c('Mouse_Line', 'Mouse_SuBline', 'AV_BW', 'AV_rel_food', 'AV_rel_water', 'AV_food', 'AV_water'))]
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[,1:(ncol(raw_data)-2)]
raw_data = raw_data[!(is.na(raw_data$Mouse_ID)),]
raw_data = raw_data[,which(variable.names(raw_data) %in% c('Mouse_ID', 'Mouse_Line', 'Mouse_SuBline', 'AV_BW', 'AV_rel_food', 'AV_rel_water', 'AV_food', 'AV_water'))]
View(raw_data)
fileX = 'SPT_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = na.omit(raw_data)
raw_data=raw_data[,2:ncol(raw_data)]
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[,1:(ncol(raw_data)-2)]
raw_data = raw_data[!(is.na(raw_data$Mouse_ID)),]
raw_data = raw_data[,which(variable.names(raw_data) %in% c('Mouse_ID', 'Mouse_Line', 'Mouse_SuBline', 'AV_BW', 'AV_rel_food', 'AV_rel_water', 'AV_food', 'AV_water'))]
exclusion_criteria = c('AV_BW', 'AV_rel_food', 'AV_rel_water')
tmp_water = raw_data
fileX = 'SPT_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = na.omit(raw_data)
raw_data=raw_data[,2:ncol(raw_data)]
exclusion_criteria = c('per_AV', 'D1_TOT', 'D2_TOT', 'D3_TOT')
for(iR in 1:nrow(raw_data)){
raw_data$Av_water[iR] = tmp_water$AV_rel_water[tmp_water$Mouse_ID == raw_data$Mouse_original_ID[iR]]
}
View(raw_data)
View(tmp_water)
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[,1:(ncol(raw_data)-2)]
raw_data = raw_data[!(is.na(raw_data$Mouse_ID)),]
raw_data = raw_data[,which(variable.names(raw_data) %in% c('Mouse_ID', 'Mouse_Line', 'Mouse_SuBline', 'AV_BW', 'AV_rel_food', 'AV_rel_water', 'AV_food', 'AV_water'))]
exclusion_criteria = c('AV_BW', 'AV_rel_food', 'AV_rel_water')
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[,1:(ncol(raw_data)-2)]
raw_data = raw_data[!(is.na(raw_data$Mouse_ID)),]
raw_data = raw_data[,which(variable.names(raw_data) %in% c('Mouse_original_ID', 'Mouse_Line', 'Mouse_SuBline', 'AV_BW', 'AV_rel_food', 'AV_rel_water', 'AV_food', 'AV_water'))]
exclusion_criteria = c('AV_BW', 'AV_rel_food', 'AV_rel_water')
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[,1:(ncol(raw_data)-2)]
raw_data = raw_data[!(is.na(raw_data$Mouse_ID)),]
raw_data = raw_data[,which(variable.names(raw_data) %in% c('Mouse_ID', 'Mouse_Line', 'Mouse_SuBline', 'AV_BW', 'AV_rel_food', 'AV_rel_water', 'AV_food', 'AV_water'))]
exclusion_criteria = c('AV_BW', 'AV_rel_food', 'AV_rel_water')
tmp_water=raw_data
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[,1:(ncol(raw_data)-2)]
raw_data = raw_data[!(is.na(raw_data$Mouse_Line)),]
raw_data = raw_data[,which(variable.names(raw_data) %in% c('Mouse_ID', 'Mouse_Line', 'Mouse_SuBline', 'AV_BW', 'AV_rel_food', 'AV_rel_water', 'AV_food', 'AV_water'))]
exclusion_criteria = c('AV_BW', 'AV_rel_food', 'AV_rel_water')
tmp_water=raw_data
fileX = 'SPT_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[!(is.na(raw_data$Mouse_Line)),]
raw_data=raw_data[,c(1,3:ncol(raw_data))]
for(iR in 1:nrow(raw_data)){
raw_data$Av_water[iR] = tmp_water$AV_rel_water[tmp_water$Mouse_ID == raw_data$Mouse_original_ID[iR]]
}
for(iR in 1:nrow(raw_data)){
raw_data$Av_water[iR] = tmp_water$AV_rel_water[tmp_water$Mouse_ID == raw_data$Mouse_ID[iR]]
}
raw_data$Av_water[iR]
raw_data$Mouse_ID[iR]
tmp_water$Mouse_ID
setwd('C:/Users/lena_/Dropbox/studies/Osnabrück/Universität/Bachelorarbeit_DroBo/experiments/Analysis Code/Behaviours')
filepath = 'C:/Users/lena_/Dropbox/studies/Osnabrück/Universität/Bachelorarbeit_DroBo/experiments/Behavioural tests'
############## BW, Food, Water
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[,1:(ncol(raw_data)-2)]
raw_data = raw_data[!(is.na(raw_data$Mouse_Line)),]
raw_data = raw_data[,which(variable.names(raw_data) %in% c('Mouse_ID', 'Mouse_Line', 'Mouse_SuBline', 'AV_BW', 'AV_rel_food', 'AV_rel_water', 'AV_food', 'AV_water'))]
exclusion_criteria = c('AV_BW', 'AV_rel_food', 'AV_rel_water')
tmp_water=raw_data
fileX = 'SPT_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[!(is.na(raw_data$Mouse_Line)),]
raw_data=raw_data[,c(1,3:ncol(raw_data))]
raw_data
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[,c(1,3:(ncol(raw_data)-2))]
raw_data = raw_data[!(is.na(raw_data$Mouse_Line)),]
raw_data = raw_data[,which(variable.names(raw_data) %in% c('Mouse_ID', 'Mouse_Line', 'Mouse_SuBline', 'AV_BW', 'AV_rel_food', 'AV_rel_water', 'AV_food', 'AV_water'))]
exclusion_criteria = c('AV_BW', 'AV_rel_food', 'AV_rel_water')
tmp_water = raw_data
fileX = 'SPT_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[!(is.na(raw_data$Mouse_Line)),]
raw_data=raw_data[,2:ncol(raw_data)]
exclusion_criteria = c('per_AV', 'D1_TOT', 'D2_TOT', 'D3_TOT')
for(iR in 1:nrow(raw_data)){
raw_data$Av_water[iR] = tmp_water$AV_rel_water[tmp_water$Mouse_original_ID == raw_data$Mouse_original_ID[iR]]
}
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[,c(1,3:(ncol(raw_data)-2))]
raw_data = raw_data[!(is.na(raw_data$Mouse_Line)),]
raw_data = raw_data[,which(variable.names(raw_data) %in% c('Mouse_ID', 'Mouse_Line', 'Mouse_SuBline', 'AV_BW', 'AV_rel_food', 'AV_rel_water', 'AV_food', 'AV_water'))]
exclusion_criteria = c('AV_BW', 'AV_rel_food', 'AV_rel_water')
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[,c(1:(ncol(raw_data)-2))]
raw_data = raw_data[!(is.na(raw_data$Mouse_Line)),]
raw_data = raw_data[,which(variable.names(raw_data) %in% c('Mouse_ID', 'Mouse_Line', 'Mouse_SuBline', 'AV_BW', 'AV_rel_food', 'AV_rel_water', 'AV_food', 'AV_water'))]
exclusion_criteria = c('AV_BW', 'AV_rel_food', 'AV_rel_water')
tmp_water=raw_data
fileX = 'SPT_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[!(is.na(raw_data$Mouse_Line)),]
raw_data=raw_data[,2:ncol(raw_data)]
for(iR in 1:nrow(raw_data)){
raw_data$Av_water[iR] = tmp_water$AV_rel_water[tmp_water$Mouse_original_ID == raw_data$Mouse_original_ID[iR]]
}
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[,c(1:3(ncol(raw_data)-2))]
raw_data = raw_data[!(is.na(raw_data$Mouse_Line)),]
raw_data = raw_data[,which(variable.names(raw_data) %in% c('Mouse_ID', 'Mouse_Line', 'Mouse_SuBline', 'AV_BW', 'AV_rel_food', 'AV_rel_water', 'AV_food', 'AV_water'))]
exclusion_criteria = c('AV_BW', 'AV_rel_food', 'AV_rel_water')
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[,c(1,3:(ncol(raw_data)-2))]
raw_data = raw_data[!(is.na(raw_data$Mouse_Line)),]
raw_data = raw_data[,which(variable.names(raw_data) %in% c('Mouse_ID', 'Mouse_Line', 'Mouse_SuBline', 'AV_BW', 'AV_rel_food', 'AV_rel_water', 'AV_food', 'AV_water'))]
exclusion_criteria = c('AV_BW', 'AV_rel_food', 'AV_rel_water')
tmp_water=raw_data
fileX = 'SPT_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[!(is.na(raw_data$Mouse_Line)),]
raw_data=raw_data[,2:ncol(raw_data)]
exclusion_criteria = c('per_AV', 'D1_TOT', 'D2_TOT', 'D3_TOT')
###
for(iR in 1:nrow(raw_data)){
raw_data$Av_water[iR] = tmp_water$AV_rel_water[tmp_water$Mouse_original_ID == raw_data$Mouse_original_ID[iR]]
}
fileX = 'BW_Food_Water_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[,c(1,3:(ncol(raw_data)-2))]
raw_data = raw_data[!(is.na(raw_data$Mouse_Line)),]
raw_data = raw_data[,which(variable.names(raw_data) %in% c('Mouse_original_ID', 'Mouse_Line', 'Mouse_SuBline', 'AV_BW', 'AV_rel_food', 'AV_rel_water', 'AV_food', 'AV_water'))]
exclusion_criteria = c('AV_BW', 'AV_rel_food', 'AV_rel_water')
tmp_water=raw_data
fileX = 'SPT_cleaned.csv'
raw_data = read.csv(paste(filepath, fileX, sep='/'))
raw_data = raw_data[!(is.na(raw_data$Mouse_Line)),]
raw_data=raw_data[,2:ncol(raw_data)]
exclusion_criteria = c('per_AV', 'D1_TOT', 'D2_TOT', 'D3_TOT')
for(iR in 1:nrow(raw_data)){
raw_data$Av_water[iR] = tmp_water$AV_rel_water[tmp_water$Mouse_original_ID == raw_data$Mouse_original_ID[iR]]
}
raw_data$Mouse_original_ID[iR]
tmp_water$Mouse_original_ID == raw_data$Mouse_original_ID[iR]
